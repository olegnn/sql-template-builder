// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sql-query creates a simple sql prepared statement 1`] = `"SELECT * FROM cars where name = $1"`;

exports[`sql-query creates a simple sql prepared statement 2`] = `"SELECT * FROM cars where name = ?"`;

exports[`sql-query creates a simple sql prepared statement 3`] = `
Array [
  123,
]
`;

exports[`sql-query creates a simple sql prepared statement 4`] = `undefined`;

exports[`sql-query creates insert statement 1`] = `"INSERT INTO randoms VALUES ($1,$2,$3,$4,$5),($6,$7,$8,$9,$10),($11,$12,$13,$14,$15),($16,$17,$18,$19,$20),($21,$22,$23,$24,$25)"`;

exports[`sql-query creates insert statement 2`] = `"INSERT INTO randoms VALUES (?,?,?,?,?),(?,?,?,?,?),(?,?,?,?,?),(?,?,?,?,?),(?,?,?,?,?)"`;

exports[`sql-query creates insert statement 3`] = `
Array [
  0.6181323459330601,
  0.5274565380505569,
  0.7000696258860464,
  0.7815711480320064,
  0.9371433950915682,
  0.3650824402206174,
  0.1595414403296309,
  0.9293976539275104,
  0.037649011518704034,
  0.41173798458754307,
  0.6930353425814768,
  0.7121006763795512,
  0.4057077621010592,
  0.4308763443801644,
  0.32467250272048775,
  0.6897208158657151,
  0.22287760419345615,
  0.5273515054137508,
  0.7650702585633016,
  0.16057079180642386,
  0.6675926745658798,
  0.8303484131711736,
  0.9148680662075892,
  0.6387881772297832,
  0.33955563575442826,
]
`;

exports[`sql-query creates insert statement 4`] = `undefined`;

exports[`sql-query creates more complicated prepared statement using set of values 1`] = `"SELECT * FROM cars WHERE name = ANY($1) and surname = $2 and age <= $3 LEFT INNER JOIN people ON (people.car_id = cars._id and people.age >= $4)"`;

exports[`sql-query creates more complicated prepared statement using set of values 2`] = `"SELECT * FROM cars WHERE name = ANY(?) and surname = ? and age <= ? LEFT INNER JOIN people ON (people.car_id = cars._id and people.age >= ?)"`;

exports[`sql-query creates more complicated prepared statement using set of values 3`] = `
Array [
  Array [
    1,
    2,
    3,
  ],
  "Alex",
  80,
  18,
]
`;

exports[`sql-query creates more complicated prepared statement using set of values 4`] = `undefined`;

exports[`sql-query creates named prepared statement 1`] = `"      SELECT * FROM my_table    "`;

exports[`sql-query creates named prepared statement 2`] = `"      SELECT * FROM my_table    "`;

exports[`sql-query creates named prepared statement 3`] = `Array []`;

exports[`sql-query creates named prepared statement 4`] = `"select_from_my_table"`;

exports[`sql-query creates nested query using rest parameters 1`] = `"INSERT INTO randoms VALUES ($1,$2,$3,$4,$5),($6,$7,$8,$9,$10),($11,$12,$13,$14,$15),($16,$17,$18,$19,$20),($21,$22,$23,$24,$25)"`;

exports[`sql-query creates nested query using rest parameters 2`] = `"INSERT INTO randoms VALUES (?,?,?,?,?),(?,?,?,?,?),(?,?,?,?,?),(?,?,?,?,?),(?,?,?,?,?)"`;

exports[`sql-query creates nested query using rest parameters 3`] = `
Array [
  0.1330345695292965,
  0.3087555548059029,
  0.15782168758438098,
  0.8914307967523212,
  0.6590624325544447,
  0.06506375788874474,
  0.36047481202714726,
  0.32332707855244647,
  0.2731640180512882,
  0.6316953839372026,
  0.920950181599979,
  0.08854906115208117,
  0.47474283207068235,
  0.8391625554958557,
  0.5373815478713315,
  0.737341390691238,
  0.171325936243528,
  0.19181998354398777,
  0.10584509459975844,
  0.17729080067019432,
  0.030403041139161813,
  0.9916368534057693,
  0.6018355339802939,
  0.5183570252142247,
  0.8927941295201514,
]
`;

exports[`sql-query creates nested query using rest parameters 4`] = `undefined`;

exports[`sql-query creates query with statements joined by "+" 1`] = `"a+b+c+d"`;

exports[`sql-query creates query with statements joined by "+" 2`] = `"a+b+c+d"`;

exports[`sql-query creates query with statements joined by "+" 3`] = `Array []`;

exports[`sql-query creates query with statements joined by "+" 4`] = `undefined`;

exports[`sql-query creates query with statements joined by "," 1`] = `"a,b,c,d"`;

exports[`sql-query creates query with statements joined by "," 2`] = `"a,b,c,d"`;

exports[`sql-query creates query with statements joined by "," 3`] = `Array []`;

exports[`sql-query creates query with statements joined by "," 4`] = `undefined`;

exports[`sql-query imports modules 1`] = `
SQLQuery {
  Symbol(PARTS): undefined,
  Symbol(DATA): undefined,
  Symbol(DELIMITER): "",
}
`;

exports[`sql-query imports modules 2`] = `
SQLQuery {
  Symbol(PARTS): Array [
    "SELECT * FROM table",
  ],
  Symbol(DATA): Array [],
  Symbol(DELIMITER): "",
}
`;

exports[`sql-query uses lazy evaluated statements 1`] = `"SELECT * FROM people WHERE name = $1"`;

exports[`sql-query uses lazy evaluated statements 2`] = `"SELECT * FROM people WHERE name = ?"`;

exports[`sql-query uses lazy evaluated statements 3`] = `
Array [
  "hey",
]
`;

exports[`sql-query uses lazy evaluated statements 4`] = `undefined`;
